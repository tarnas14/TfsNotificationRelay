<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="tfsNotificationRelay" type="DevCore.TfsNotificationRelay.Configuration.TfsNotificationRelaySection, DevCore.TfsNotificationRelay" requirePermission="false" />
  </configSections>
  <tfsNotificationRelay xmlns="http://tempuri.org/TfsNotificationRelaySection.xsd"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:noNamespaceSchemaLocation="TfsNotificationRelay.xsd">
    <!--
      If identifyForcePush is set, the entire graph might be traversed while checking ancestry. 
      If you have a huge repository and are experiencing performance issues, disable identifyForcePush.
      -->
    <settings
      logfile=""
      stripUserDomain="true"
      commentMaxLength="72"
      maxLines="10"
      hashLength="7"
      identifyForcePush="true"
        />
    <bots>
      <!--
        Multiple bots can be added here, just make sure they have a unique id.
        -->
      <bot id="slack" type="DevCore.TfsNotificationRelay.Slack.SlackNotifier, DevCore.TfsNotificationRelay.Slack" textId="slacktext">
        <botSettings>
          <add name="webhookUrl" value="someTestWebhookUrl" />
          <add name="channels" value="#general, #b" />
          <add name="notableEventsChannels" value="#notable, events" />
          <!-- one or many comma-separated channels -->
          <add name="username" value="tfsbot" />
          <add name="iconEmoji" value="testEmoji" />
          <add name="iconUrl" value="https://raw.githubusercontent.com/kria/TfsNotificationRelay/master/tfsicon.png" />
          <add name="standardColor" value="#68217a" />
          <add name="successColor" value="#1cb841" />
          <add name="errorColor" value="#ca3c3c" />
          <!-- tfs states configuration -->
          <add name="testingState" value="testingState"/>
          <add name="inProgressState" value="inProgressState"/>
          <add name="readyToTestState" value="readyToTestState"/>
        </botSettings>
        <eventRules>
          <!--
            Multiple event rules can be added here. 
            The notify attribute of the first (top to bottom) rule that matches, will determine whether a notification is sent or not.
            If no rule matches, no notification will be sent.
            The events attribute takes a comma-separated list of: 
            
            None, GitPush, BuildSucceeded, BuildFailed, BuildQualityChanged, ProjectCreated, ProjectDeleted, Checkin, 
            WorkItemStateChange, WorkItemAssignmentChange, PullRequestCreated, PullRequestStatusUpdate, PullRequestReviewerVote, All
            
            The teamProjectCollection, teamProject, gitRepository and buildDefinition attributes take regex patterns. 
            -->
          <rule events="All" notify="true" teamProjectCollection=".*" teamProject=".*" gitRepository=".*" buildDefinition=".*" />
        </eventRules>
      </bot>
    </bots>
    <texts>
      <text id="slacktext"
        pushFormat="{userName} {pushed} to &lt;{repoUri}|{projectName}/{repoName}&gt;"
        pushed="pushed"
        forcePushed="force-pushed"
        commit="commit"
        refPointer="-&gt;"
        deleted="deleted"
        commitFormat="{action} &lt;{commitUri}|{commitId}&gt; ({changeCounts}) {authorTime} {authorName} - *{comment}*"
        linesSupressedFormat="{count} more line(s) suppressed."
        dateTimeFormat=""
        timeSpanFormat=""
        buildFormat="Build ({buildReason}) &lt;{buildUrl}|{projectName}/{buildNumber}&gt; triggered by {userName} ({buildDuration})."
        buildQualityChangedFormat="Build Quality of &lt;{buildUrl}|{projectName}/{buildNumber}&gt; changed from `{oldValue}` to `{newValue}`."
        buildQualityNotSet="Not Set"
        projectCreatedFormat="Team Project &lt;{projectUrl}|{projectName}&gt; created."
        projectDeletedFormat="Team Project {projectName} deleted."
        checkinFormat="{userName} checked in &lt;{changesetUrl}|Changeset {changesetId}&gt; to {projectLinks} - *{comment}*"
        projectLinkFormat="&lt;{projectUrl}|{projectName}&gt;"
        changeCountAddFormat="{count}a"
        changeCountDeleteFormat="{count}d"
        changeCountEditFormat="{count}e"
        changeCountRenameFormat="{count}r"
        changeCountSourceRenameFormat="{count}sr"
        changeCountUnknownFormat="{count}u"
        workItemchangedFormat="{userName} {action} &lt;{wiUrl}|{projectName}/{wiType} #{wiId}&gt; - {wiTitle}"
        pullRequestCreatedFormat="{userName} created &lt;{prUrl}|pull request #{prId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt; - {prTitle}"
        pullRequestStatusUpdateFormat="{userName} {action} &lt;{prUrl}|pull request #{prId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt; - {prTitle}"
        pullRequestReviewerVoteFormat="{userName} {action} &lt;{prUrl}|pull request #{prId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt; - {prTitle}"
        updated="updated"
        created="created"
        voteApproved="approved the changes in"
        voteRejected="rejected the changes in"
        voteRescinded="rescinded their feedback for"
        completed="completed"
        abandoned="abandoned"
        reactivated="reactivated"
        state="State"
        assignedTo="Assigned To"
          />
      </texts>
  </tfsNotificationRelay>
</configuration>